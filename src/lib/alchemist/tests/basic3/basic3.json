[
  {
    "parsed": {
      "name": "Puppet",
      "properties": {
        "puppet": {
          "type": {
            "data?": {
              "type": "u64"
            }
          }
        }
      },
      "methods": {
        "initialize": {
          "decorators": ["@init(\"puppet\")"]
        },
        "setData": {
          "block": ["this.puppet.data = data;"],
          "decorators": ["@mut(\"puppet\")"],
          "params": {
            "data": "u64"
          }
        }
      }
    },
    "anchorized": {
      "name": "puppet",
      "accounts": {
        "Puppet": {
          "data": "u64"
        }
      },
      "derived": {
        "Initialize<'info>": [
          "#[account(init)]",
          "pub puppet: ProgramAccount<'info, Puppet>,",
          "pub rent: Sysvar<'info, Rent>,"
        ],
        "SetData<'info>": [
          "#[account(mut)]",
          "pub puppet: ProgramAccount<'info, Puppet>,"
        ]
      },
      "instructions": {
        "initialize": {
          "block": ["ctx.accounts.puppet. = {};"],
          "params": {
            "ctx": "Context<Initialize>"
          }
        },
        "set_data": {
          "block": ["ctx.accounts.puppet.data = data;"],
          "params": {
            "ctx": "Context<SetData>",
            "data": "u64"
          }
        }
      }
    }
  },
  {
    "parsed": {
      "name": "PuppetMaster",
      "properties": {},
      "methods": {
        "pullStrings": {
          "params": {
            "data": "u64"
          },
          "block": ["Puppet.setData(data);"],
          "decorators": ["@cpi(Puppet)"]
        }
      }
    },
    "anchorized": {
      "name": "puppet_master",
      "accounts": {},
      "instructions": {
        "pull_strings": {
          "params": {
            "_ctx": "Context<PullStrings>",
            "data": "u64"
          },
          "block": [
            "let cpi_program = ctx.accounts.puppet_program.clone();",
            "let cpi_accounts = SetData {",
            "puppet: ctx.accounts.puppet.clone().into(),",
            "};",
            "let cpi_ctx = CpiContext::new(cpi_program, cpi_accounts);",
            "puppet::cpi::set_data(cpi_ctx, data)"
          ]
        }
      },
      "derived": {
        "PullStrings<'info>": [
          "#[account(mut)]",
          "pub puppet: CpiAccount<'info, Puppet>,",
          "pub puppet_program: AccountInfo<'info>,"
        ]
      }
    }
  }
]
